<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crossyf.mapper.ItemsCommentsMapper">

    <resultMap type="com.crossyf.entity.ItemsComments" id="ItemsCommentsMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="itemId" column="item_id" jdbcType="VARCHAR"/>
        <result property="itemName" column="item_name" jdbcType="VARCHAR"/>
        <result property="itemSpecId" column="item_spec_id" jdbcType="VARCHAR"/>
        <result property="sepcName" column="sepc_name" jdbcType="VARCHAR"/>
        <result property="commentLevel" column="comment_level" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <insert id="saveComments" parameterType="map">
        insert into
        items_comments
        (
        id,
        user_id,
        item_id,
        item_name,
        item_spec_id,
        sepc_name,
        comment_level,
        content,
        created_time,
        updated_time
        )
        values
        <foreach collection="commentList" item="item" index="index" separator=",">
            (
            #{item.commentId},
            #{userId},
            #{item.itemId},
            #{item.itemName},
            #{item.itemSpecId},
            #{item.itemSpecName},
            #{item.commentLevel},
            #{item.content},
            now(),
            now()
            )
        </foreach>
    </insert>
    <select id="queryMyComments" resultType="com.crossyf.entity.vo.MyCommentVO" parameterType="map">
        SELECT
            ic.id as commentId,
            ic.content as content,
            ic.created_time as createdTime,
            ic.item_id as itemId,
            ic.item_name as itemName,
            ic.sepc_name as sepcName,
            ii.url as itemImg
        FROM
            items_comments ic
                LEFT JOIN
            items_img ii
            ON
                ic.item_id = ii.item_id
        WHERE
            ic.user_id = #{userId}
          AND
            ii.is_main = 1
        ORDER BY
            ic.created_time
            desc
    </select>

</mapper>